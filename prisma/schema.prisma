// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Bill {
  id            Int          @id @default(autoincrement())
  bill_no       String       @unique
  bill_kind     Int?
  bill_name     String
  who           String?
  bill_class    String?
  bill_date     String?
  committee     String?
  comm_seq      Int?
  bill_result   String?
  match_url     String?
  create_date   DateTime     @default(now())
  update_date   DateTime?    @updatedAt
  congressman   Congressman? @relation(fields: [congressmanId], references: [id])
  congressmanId Int?
}

model Congressman {
  id          Int       @id @default(autoincrement())
  name        String
  elect_num   String?
  eng_name    String?
  chn_name    String?
  gender      String?
  birth_where String?
  birth_date  String?
  email       String?
  homepage    String?
  create_date DateTime? @default(now())
  update_date DateTime? @updatedAt
  bills       Bill[]

  party_histories Pistory[]
}

model Party {
  id          Int       @id @default(autoincrement())
  name        String
  note        String?
  inuse       String?
  create_date DateTime  @default(now())
  update_date DateTime? @updatedAt

  pistory Pistory[]
}

model Pistory {
  id       Int     @id @default(autoincrement())
  note     String?
  in_date  String
  out_date String

  party   Party @relation(fields: [partyId], references: [id])
  partyId Int

  congressman   Congressman @relation(fields: [congressmanId], references: [id])
  congressmanId Int

  create_date DateTime? @default(now())
  update_date DateTime? @updatedAt

}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  userId   String @unique
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
